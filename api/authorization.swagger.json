{
  "swagger": "2.0",
  "info": {
    "title": "authorization.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "AuthorizationService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/check": {
      "post": {
        "summary": "Check if a user has a specific permission on an object",
        "operationId": "AuthorizationService_Check",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CheckResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CheckRequest"
            }
          }
        ],
        "tags": [
          "AuthorizationService"
        ]
      }
    },
    "/v1/check/batch": {
      "post": {
        "summary": "Batch check multiple permissions at once for efficiency",
        "operationId": "AuthorizationService_BatchCheck",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BatchCheckResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1BatchCheckRequest"
            }
          }
        ],
        "tags": [
          "AuthorizationService"
        ]
      }
    },
    "/v1/expand": {
      "post": {
        "summary": "Expand a userset to show all users that have a specific relation\nUseful for debugging and understanding permission inheritance",
        "operationId": "AuthorizationService_Expand",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ExpandResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ExpandRequest"
            }
          }
        ],
        "tags": [
          "AuthorizationService"
        ]
      }
    },
    "/v1/users/{userId}/permissions": {
      "get": {
        "summary": "List all permissions a user has across different resources",
        "operationId": "AuthorizationService_ListPermissions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPermissionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "description": "The user ID to list permissions for",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "description": "Optional namespace filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "objectId",
            "description": "Optional object ID filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "consistencyToken",
            "description": "Optional consistency token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageToken",
            "description": "Pagination token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "description": "Maximum number of permissions to return",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "AuthorizationService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1BatchCheckRequest": {
      "type": "object",
      "properties": {
        "checks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CheckRequest"
          },
          "title": "List of checks to perform"
        },
        "consistencyToken": {
          "type": "string",
          "title": "Optional consistency token that applies to all checks"
        }
      },
      "title": "BatchCheckRequest allows checking multiple permissions at once"
    },
    "v1BatchCheckResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CheckResponse"
          },
          "title": "Results for each check in the same order as the request"
        },
        "consistencyToken": {
          "type": "string",
          "title": "Consistency token for subsequent operations"
        }
      },
      "title": "BatchCheckResponse contains results for all checks"
    },
    "v1CheckRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "title": "The namespace of the object being checked"
        },
        "objectId": {
          "type": "string",
          "title": "The ID of the object being checked"
        },
        "relation": {
          "type": "string",
          "title": "The relation/permission being checked"
        },
        "userId": {
          "type": "string",
          "title": "The user ID to check permissions for"
        },
        "consistencyToken": {
          "type": "string",
          "title": "Optional consistency token for causally consistent reads"
        },
        "context": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Optional context for conditional permissions"
        }
      },
      "title": "CheckRequest represents a single authorization check"
    },
    "v1CheckResponse": {
      "type": "object",
      "properties": {
        "allowed": {
          "type": "boolean",
          "title": "Whether the user has the requested permission"
        },
        "consistencyToken": {
          "type": "string",
          "title": "Consistency token for subsequent operations"
        },
        "checkedAt": {
          "type": "string",
          "format": "date-time",
          "title": "When this check was performed"
        },
        "debugInfo": {
          "$ref": "#/definitions/v1DebugInfo",
          "title": "Optional debug information (only included in debug mode)"
        }
      },
      "title": "CheckResponse contains the result of an authorization check"
    },
    "v1DebugInfo": {
      "type": "object",
      "properties": {
        "resolutionPath": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The resolution path taken to reach the decision"
        },
        "resolutionTimeMs": {
          "type": "string",
          "format": "int64",
          "title": "Time taken to resolve the check"
        },
        "fromCache": {
          "type": "boolean",
          "title": "Whether the result came from cache"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Additional debug metadata"
        }
      },
      "title": "DebugInfo provides additional information for debugging authorization decisions"
    },
    "v1ExpandRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "title": "The namespace of the object"
        },
        "objectId": {
          "type": "string",
          "title": "The object ID"
        },
        "relation": {
          "type": "string",
          "title": "The relation to expand"
        },
        "consistencyToken": {
          "type": "string",
          "title": "Optional consistency token"
        },
        "maxDepth": {
          "type": "integer",
          "format": "int32",
          "title": "Maximum depth to expand (prevents infinite recursion)"
        }
      },
      "title": "ExpandRequest asks for expansion of a userset"
    },
    "v1ExpandResponse": {
      "type": "object",
      "properties": {
        "userset": {
          "$ref": "#/definitions/v1UserSet",
          "title": "The expanded userset tree"
        },
        "consistencyToken": {
          "type": "string",
          "title": "Consistency token"
        },
        "expandedAt": {
          "type": "string",
          "format": "date-time",
          "title": "When this expansion was performed"
        }
      },
      "title": "ExpandResponse contains the expanded userset"
    },
    "v1ListPermissionsResponse": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Permission"
          },
          "title": "The permissions the user has"
        },
        "nextPageToken": {
          "type": "string",
          "title": "Token for next page of results"
        },
        "consistencyToken": {
          "type": "string",
          "title": "Consistency token"
        }
      },
      "title": "ListPermissionsResponse contains the user's permissions"
    },
    "v1ObjectRelation": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "title": "The namespace of the object"
        },
        "objectId": {
          "type": "string",
          "title": "The object ID"
        },
        "relation": {
          "type": "string",
          "title": "The relation name"
        }
      },
      "title": "ObjectRelation represents users with a relation to an object"
    },
    "v1Permission": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "title": "The namespace this permission applies to"
        },
        "objectId": {
          "type": "string",
          "title": "The object ID this permission applies to"
        },
        "relation": {
          "type": "string",
          "title": "The relation/permission name"
        },
        "allowed": {
          "type": "boolean",
          "title": "Whether this permission is allowed"
        }
      },
      "title": "Permission represents an action that can be performed"
    },
    "v1UserSet": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "title": "Direct user reference"
        },
        "objectRelation": {
          "$ref": "#/definitions/v1ObjectRelation",
          "title": "Reference to users with a specific relation to an object"
        },
        "union": {
          "$ref": "#/definitions/v1UserSetUnion",
          "title": "Union of multiple usersets"
        },
        "intersection": {
          "$ref": "#/definitions/v1UserSetIntersection",
          "title": "Intersection of multiple usersets"
        },
        "exclusion": {
          "$ref": "#/definitions/v1UserSetExclusion",
          "title": "Exclusion of one userset from another"
        }
      },
      "title": "UserSet represents a set of users that can be computed"
    },
    "v1UserSetExclusion": {
      "type": "object",
      "properties": {
        "base": {
          "$ref": "#/definitions/v1UserSet"
        },
        "exclude": {
          "$ref": "#/definitions/v1UserSet"
        }
      },
      "title": "UserSetExclusion represents exclusion of one userset from another"
    },
    "v1UserSetIntersection": {
      "type": "object",
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UserSet"
          }
        }
      },
      "title": "UserSetIntersection represents the intersection of multiple usersets"
    },
    "v1UserSetUnion": {
      "type": "object",
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UserSet"
          }
        }
      },
      "title": "UserSetUnion represents the union of multiple usersets"
    }
  }
}
